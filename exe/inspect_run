#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path("..", "lib/spec_reports_toolbox")

require "spec_reports_toolbox/test_run"
require "slop"
require "pry"

begin
  opts = Slop.parse do |options|
    options.banner = "Usage: inspect_run.rb [artifact_type] [options]"
    "Usage: inspect_run.rb spec_reports display_table --json --fetch_artifacts"
    "Usage: inspect_run.rb spec_reports show_failed --json --re-run-failed"

    "Usage: ci_toolbox [spec_reports|artifacts|triage] [action] [options]"

    options.string "-a", "--autofetch-artifact", "", required: true
    options.string "-d", "--directory with existing artifacts", "", required: true
    options.string "-f", "--force-redownload", "", required: true

    options.string "-r", "--run-id", "Run ID", required: true
    options.integer "-a", "--run-attempt", "Run Attempt", default: 1
    options.bool "-fa", "--fetch-artifacts", "Fetch artifacts from S3", default: false
    options.bool "-fr", "--fetch-reports", "Fetch reports from S3", default: false
    options.bool "-t", "--display-table", "Display table", default: false
    options.bool "-l", "--display-logs", "Display logs", default: false

    options.bool "--force", "Force artifacts to be deleted and re-fetched", default: false

    options.string "--format", "Format of output", default: "terminal"

    options.on "-h", "--help" do
      puts options
      exit
    end
  end

  test_run = TestRun.new(opts[:run_id], opts[:run_attempt])
  test_run.spec_artifacts.fetch!(force: opts[:force]) if opts[:fetch_artifacts]
  test_run.spec_reports.fetch!(force: opts[:force]) if opts[:fetch_reports]

  puts test_run.spec_reports.table(opts) if opts[:display_table]
  puts test_run.spec_artifacts.display_logs if opts[:display_logs]
rescue Slop::Error => error
  puts error
rescue TestRun::SpecReports::MissingSpecReports => error
  puts "Missing spec reports. Pass --fetch-reports and ensure run_id is valid"
rescue TestRun::SpecArtifacts::MissingSpecArtifacts => error
  puts "Missing spec artifacts. Pass --fetch-artifacts and ensure run_id is valid"
end
